# File: gradle/libs.versions.toml

[versions]
compileSdk = "36"
minSdk = "26"
targetSdk = "34"
agp = "8.11.1"
kotlin = "2.0.21"
# compose-compiler = "1.5.14"
composeCompilerExtension = "1.5.14"
androidxPreference = "1.2.1"

coreKtx = "1.16.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.1"
material = "1.12.0"
activity = "1.10.1"
constraintlayout = "2.2.1"
# VERIFICA QUESTA VERSIONE KSP! Deve essere compatibile con Kotlin 2.0.21
# Vedi: https://github.com/google/ksp/releases
ksp = "2.0.0-1.0.21" # ESEMPIO - SOSTITUISCI CON LA VERSIONE CORRETTA
lifecycle = "2.8.0"
room = "2.6.1"
composeBom = "2024.06.00"
activityCompose = "1.9.0"
coroutines = "1.7.3"
# La versione di compose.compiler è legata alla versione di Kotlin
# non è più necessario definirla separatamente se usi il plugin compose.compiler
# composeCompilerExtension = "..." # Rimosso

# Versioni per i test di Compose (opzionale, ma utile averle definite)
composeUiTestJunit4 = "1.6.8" # Ho completato questa versione, verifica se è quella che intendi
# Aggiunte altre versioni comuni
accompanist = "0.34.0" # Per le librerie Accompanist (se le usi)
hilt = "2.51.1" # Per Hilt (se lo usi per la dependency injection)
mockito = "5.12.0" # Per Mockito (testing)
robolectric = "4.13" # Per Robolectric (testing)
navigationCompose = "2.7.7" # Per Navigation Compose
glance = "1.1.0-rc01"

[libraries]
# Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
com-google-android-material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" } # Per activity non-compose

androidx-glance-appwidget = { group = "androidx.glance", name = "glance-appwidget", version.ref = "glance" }
androidx-glance-material3 = { group = "androidx.glance", name = "glance-material3", version.ref = "glance" } # Se usi componenti M3 in Glance
# Aggiungi anche androidx-glance se usi solo Glance senza appwidget specificamente
androidx-glance = { group = "androidx.glance", name = "glance", version.ref = "glance" }

# Kotlin Coroutines
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }

# Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }
#
# Room
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room"}
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" } # Per usare le coroutines con Room
androidx-room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" } # Per i test di Room

# Compose
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" } # Per l'anteprima e gli strumenti di Compose
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-material-icons-core = { group = "androidx.compose.material", name = "material-icons-core" }
androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose"}
androidx-preference = { group = "androidx.preference", name = "preference-ktx", version.ref = "androidxPreference" }


# Hilt (se lo usi)
com-google-dagger-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
com-google-dagger-hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
# Se usi Hilt con ViewModel
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version = "1.2.0" } # Verifica questa versione

# Testing
junit-junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "composeUiTestJunit4" }
# Mockito (opzionale, ma comune per unit test)
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version = "5.3.1" } # Verifica questa versione
# Robolectric (opzionale, ma comune per test che richiedono un ambiente Android)
robolectric-robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }


# Accompanist (se usi qualcuna di queste librerie, altrimenti puoi rimuoverle)
accompanist-systemuicontroller = { group = "com.google.accompanist", name = "accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanist" }
# Aggiungi altre librerie Accompanist se necessario, es: pager, flowlayout, webview, etc.

# Altre librerie utili (esempi, puoi aggiungerne o rimuoverne in base alle tue necessità)
# Coil per il caricamento di immagini (se usi Compose)
io-coil-kt-coil-compose = { group = "io.coil-kt", name = "coil-compose", version = "2.6.0" } # Verifica questa versione
# Retrofit per networking
com-squareup-retrofit2-retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version = "2.11.0" } # Verifica questa versione
com-squareup-retrofit2-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version = "2.11.0" } # Verifica questa versione
# OkHttp (spesso usato con Retrofit)
com-squareup-okhttp3-okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version = "4.12.0" } # Verifica questa versione
com-squareup-okhttp3-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version = "4.12.0" } # Verifica questa versione

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

# Plugin del Compilatore Jetpack Compose di Kotlin (NECESSARIO per Kotlin 2.0+)
# Questo è l'alias che dovresti usare nel tuo file build.gradle.kts del modulo app.
jetbrains-kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# KSP per processori di annotazioni come Room e Hilt
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Hilt plugin (decommenta se lo usi attivamente nel tuo progetto)
# google-dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# Kotlin Serialization (decommenta se usi KotlinX Serialization)
# jetbrains-kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Kotlin Parcelize (decommenta se usi per implementare Parcelable in modo semplice)
# jetbrains-kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }


[bundles]
# Esempio di bundle per ViewModel + LiveData (se non usi Compose ovunque)
# lifecycle = ["androidx-lifecycle-runtime-ktx", "androidx-lifecycle-viewmodel-ktx", "androidx-lifecycle-livedata-ktx"]
# Esempio di bundle per le dipendenze di Room
room = ["androidx-room-runtime", "androidx-room-ktx"]
# Esempio di bundle per le dipendenze base di Compose UI
compose-ui = ["androidx-compose-ui", "androidx-compose-ui-graphics", "androidx-compose-ui-tooling-preview", "androidx-compose-material3"]
# Esempio di bundle per Coroutines
coroutines = ["kotlinx-coroutines-core", "kotlinx-coroutines-android"]
# Esempio di bundle per i test
# testing-unit = ["junit-junit", "mockito-core", "mockito-kotlin"]
# testing-android = ["androidx-junit", "androidx-espresso-core", "androidx-compose-ui-test-junit4"]

# Nota: I bundles sono opzionali ma possono semplificare la gestione delle dipendenze nel file build.gradle.
# Puoi definire i tuoi bundles in base a come raggruppi logicamente le tue dipendenze.
